{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","cardArray","robots","map","user","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchField","target","value","axios","get","then","res","data","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACrB,gCACE,oBAAIC,UAAU,KAAd,SAAoBH,IACpB,4BAAIC,WCIGK,EATE,SAAC,GAAgB,IAC1BC,EADyB,EAAbC,OACOC,KAAI,SAACC,GAC5B,OACE,cAAC,EAAD,CAAoBR,GAAIQ,EAAKR,GAAIF,KAAMU,EAAKV,KAAMC,MAAOS,EAAKT,OAAnDS,EAAKR,OAGpB,OAAO,8BAAMK,KCMAI,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKT,UAAU,MAAf,SACE,uBACEA,UAAU,kCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCMHI,EAbA,SAACC,GACd,OACE,qBACEC,MAAO,CACLC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,SAJZ,SAOGJ,EAAMK,YCaEC,E,kDArBb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CACZJ,UAAU,M,oBAId,WACE,OAAIG,KAAKJ,MAAMC,SACN,2DAEFG,KAAKX,MAAMK,a,GAlBKQ,a,iBC+CZC,G,wDAxCb,aAAe,IAAD,8BACZ,gBAWFC,eAAiB,SAACC,GAChB,IAAMC,EAAcD,EAAME,OAAOC,MACjC,EAAKP,UAAS,iBAAO,CACnBK,YAAaA,OAbf,EAAKV,MAAQ,CAAEhB,OAAQ,GAAI0B,YAAa,IAF5B,E,qDAKd,WAAqB,IAAD,OAElBG,IAAMC,IADM,8CACGC,MAAK,SAACC,GACnB,EAAKX,SAAS,CAAErB,OAAQgC,EAAIC,Y,oBAUhC,WAAU,IAAD,EACyBb,KAAKJ,MAA7BhB,EADD,EACCA,OAAQ0B,EADT,EACSA,YACVQ,EAAiBlC,EAAOmC,QAAO,SAACC,GACpC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAEvD,OAAQrC,EAAOuC,OAGb,sBAAK5C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,eAAC,EAAD,WACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUxB,OAAQkC,MAFtB,UALF,6C,GAzBYZ,cCIHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d4cd7819.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n  return (\r\n    <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc\">\r\n      <img alt=\"robots\" src={`https://robohash.org/${id}?size=200x200`}></img>\r\n      <div>\r\n        <h2 className=\"f5\">{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n  const cardArray = robots.map((user) => {\r\n    return (\r\n      <Card key={user.id} id={user.id} name={user.name} email={user.email} />\r\n    );\r\n  });\r\n  return <div>{cardArray}</div>;\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa3 ba b-green bg-lightest-blue\"\r\n        type=\"search\"\r\n        placeholder=\"Search robots\"\r\n        onChange={searchChange}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: 'scroll',\r\n        border: '5px solid black',\r\n        height: '800px',\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({\r\n      hasError: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Ooooops. That is not good</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { robots: [], searchField: '' };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const url = 'https://jsonplaceholder.typicode.com/users';\r\n    axios.get(url).then((res) => {\r\n      this.setState({ robots: res.data });\r\n    });\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    const searchField = event.target.value;\r\n    this.setState(() => ({\r\n      searchField: searchField,\r\n    }));\r\n  };\r\n  render() {\r\n    const { robots, searchField } = this.state;\r\n    const filteredRobots = robots.filter((robot) => {\r\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    });\r\n    return !robots.length ? (\r\n      <h1>Loading</h1>\r\n    ) : (\r\n      <div className=\"tc\">\r\n        <h1 className=\"f1\">RoboFriends</h1>\r\n        <SearchBox searchChange={this.onSearchChange} />\r\n        <Scroll>\r\n          <ErrorBoundry>\r\n            <CardList robots={filteredRobots} />\r\n          </ErrorBoundry>\r\n          ;\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}